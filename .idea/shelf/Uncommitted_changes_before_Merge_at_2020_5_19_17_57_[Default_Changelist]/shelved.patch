Index: service-customerinfo/mvnw
===================================================================
--- service-customerinfo/mvnw	(date 1589768699601)
+++ service-customerinfo/mvnw	(date 1589768699601)
@@ -0,0 +1,310 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Maven Start Up Batch script
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   M2_HOME - location of maven2's installed home dir
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "`uname`" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        export JAVA_HOME="`/usr/libexec/java_home`"
+      else
+        export JAVA_HOME="/Library/Java/Home"
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=`java-config --jre-home`
+  fi
+fi
+
+if [ -z "$M2_HOME" ] ; then
+  ## resolve links - $0 may be a link to maven's home
+  PRG="$0"
+
+  # need this for relative symlinks
+  while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+      PRG="$link"
+    else
+      PRG="`dirname "$PRG"`/$link"
+    fi
+  done
+
+  saveddir=`pwd`
+
+  M2_HOME=`dirname "$PRG"`/..
+
+  # make it fully qualified
+  M2_HOME=`cd "$M2_HOME" && pwd`
+
+  cd "$saveddir"
+  # echo Using m2 at $M2_HOME
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --unix "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME="`(cd "$M2_HOME"; pwd)`"
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="`which javac`"
+  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=`which readlink`
+    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
+      if $darwin ; then
+        javaHome="`dirname \"$javaExecutable\"`"
+        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
+      else
+        javaExecutable="`readlink -f \"$javaExecutable\"`"
+      fi
+      javaHome="`dirname \"$javaExecutable\"`"
+      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="`which java`"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=`cd "$wdir/.."; pwd`
+    fi
+    # end of workaround
+  done
+  echo "${basedir}"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    echo "$(tr -s '\n' ' ' < "$1")"
+  fi
+}
+
+BASE_DIR=`find_maven_basedir "$(pwd)"`
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found .mvn/wrapper/maven-wrapper.jar"
+    fi
+else
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
+    fi
+    if [ -n "$MVNW_REPOURL" ]; then
+      jarUrl="$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
+    else
+      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
+    fi
+    while IFS="=" read key value; do
+      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;
+      esac
+    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Downloading from: $jarUrl"
+    fi
+    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
+    if $cygwin; then
+      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`
+    fi
+
+    if command -v wget > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found wget ... using wget"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            wget "$jarUrl" -O "$wrapperJarPath"
+        else
+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath"
+        fi
+    elif command -v curl > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found curl ... using curl"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            curl -o "$wrapperJarPath" "$jarUrl" -f
+        else
+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f
+        fi
+
+    else
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Falling back to using Java to download"
+        fi
+        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        # For Cygwin, switch paths to Windows format before running javac
+        if $cygwin; then
+          javaClass=`cygpath --path --windows "$javaClass"`
+        fi
+        if [ -e "$javaClass" ]; then
+            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Compiling MavenWrapperDownloader.java ..."
+                fi
+                # Compiling the Java class
+                ("$JAVA_HOME/bin/javac" "$javaClass")
+            fi
+            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                # Running the downloader
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Running MavenWrapperDownloader.java ..."
+                fi
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
+if [ "$MVNW_VERBOSE" = true ]; then
+  echo $MAVEN_PROJECTBASEDIR
+fi
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --path --windows "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
+fi
+
+# Provide a "standardized" way to retrieve the CLI args that will
+# work with both Windows and non-Windows executions.
+MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
+export MAVEN_CMD_LINE_ARGS
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: msrhotel/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <packaging>pom</packaging>\r\n    <modules>\r\n        <module>hotel-common</module>\r\n        <module>renren-fast</module>\r\n        <module>common-base</module>\r\n        <module>service-room</module>\r\n        <module>service-account</module>\r\n        <module>service-customer</module>\r\n        <module>service-order</module>\r\n    </modules>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>2.1.8.RELEASE</version>\r\n        <relativePath/> <!-- lookup parent from repository -->\r\n    </parent>\r\n    <groupId>com.msr</groupId>\r\n    <artifactId>msrhotel</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <name>msrhotel</name>\r\n    <description>Demo project for Spring Boot</description>\r\n\r\n\r\n    <properties>\r\n        <java.version>1.8</java.version>\r\n        <guli.version>0.0.1-SNAPSHOT</guli.version>\r\n        <mybatis-plus.version>3.0.5</mybatis-plus.version>\r\n        <velocity.version>2.0</velocity.version>\r\n        <swagger.version>2.7.0</swagger.version>\r\n        <aliyun.oss.version>2.8.3</aliyun.oss.version>\r\n        <jodatime.version>2.10.1</jodatime.version>\r\n        <poi.version>3.17</poi.version>\r\n        <commons-fileupload.version>1.3.1</commons-fileupload.version>\r\n        <commons-io.version>2.6</commons-io.version>\r\n        <httpclient.version>4.5.1</httpclient.version>\r\n        <jwt.version>0.7.0</jwt.version>\r\n        <aliyun-java-sdk-core.version>4.3.3</aliyun-java-sdk-core.version>\r\n        <aliyun-sdk-oss.version>3.4.2</aliyun-sdk-oss.version>\r\n        <aliyun-java-sdk-vod.version>2.15.2</aliyun-java-sdk-vod.version>\r\n        <aliyun-java-vod-upload.version>1.4.12</aliyun-java-vod-upload.version>\r\n        <aliyun-sdk-vod-upload.version>1.4.12</aliyun-sdk-vod-upload.version>\r\n        <fastjson.version>1.2.28</fastjson.version>\r\n        <gson.version>2.8.2</gson.version>\r\n        <json.version>20170516</json.version>\r\n        <commons-dbutils.version>1.7</commons-dbutils.version>\r\n        <canal.client.version>1.1.0</canal.client.version>\r\n        <docker.image.prefix>zx</docker.image.prefix>\r\n        <cloud-alibaba.version>0.2.2.RELEASE</cloud-alibaba.version>\r\n    </properties>\r\n\r\n\r\n    <dependencyManagement>\r\n        <dependencies>\r\n            <!--Spring Cloud-->\r\n            <dependency>\r\n                <groupId>org.springframework.cloud</groupId>\r\n                <artifactId>spring-cloud-dependencies</artifactId>\r\n                <version>Hoxton.RELEASE</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n\r\n            <dependency>\r\n                <groupId>org.springframework.cloud</groupId>\r\n                <artifactId>spring-cloud-alibaba-dependencies</artifactId>\r\n                <version>${cloud-alibaba.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n            <!--mybatis-plus 持久层-->\r\n            <dependency>\r\n                <groupId>com.baomidou</groupId>\r\n                <artifactId>mybatis-plus-boot-starter</artifactId>\r\n                <version>${mybatis-plus.version}</version>\r\n            </dependency>\r\n\r\n            <!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 -->\r\n            <dependency>\r\n                <groupId>org.apache.velocity</groupId>\r\n                <artifactId>velocity-engine-core</artifactId>\r\n                <version>${velocity.version}</version>\r\n            </dependency>\r\n\r\n            <!--swagger-->\r\n            <dependency>\r\n                <groupId>io.springfox</groupId>\r\n                <artifactId>springfox-swagger2</artifactId>\r\n                <version>${swagger.version}</version>\r\n            </dependency>\r\n            <!--swagger ui-->\r\n            <dependency>\r\n                <groupId>io.springfox</groupId>\r\n                <artifactId>springfox-swagger-ui</artifactId>\r\n                <version>${swagger.version}</version>\r\n            </dependency>\r\n\r\n            <!--aliyunOSS-->\r\n            <dependency>\r\n                <groupId>com.aliyun.oss</groupId>\r\n                <artifactId>aliyun-sdk-oss</artifactId>\r\n                <version>${aliyun.oss.version}</version>\r\n            </dependency>\r\n\r\n            <!--日期时间工具-->\r\n            <dependency>\r\n                <groupId>joda-time</groupId>\r\n                <artifactId>joda-time</artifactId>\r\n                <version>${jodatime.version}</version>\r\n            </dependency>\r\n\r\n            <!--xls-->\r\n            <dependency>\r\n                <groupId>org.apache.poi</groupId>\r\n                <artifactId>poi</artifactId>\r\n                <version>${poi.version}</version>\r\n            </dependency>\r\n            <!--xlsx-->\r\n            <dependency>\r\n                <groupId>org.apache.poi</groupId>\r\n                <artifactId>poi-ooxml</artifactId>\r\n                <version>${poi.version}</version>\r\n            </dependency>\r\n\r\n            <!--文件上传-->\r\n            <dependency>\r\n                <groupId>commons-fileupload</groupId>\r\n                <artifactId>commons-fileupload</artifactId>\r\n                <version>${commons-fileupload.version}</version>\r\n            </dependency>\r\n\r\n            <!--commons-io-->\r\n            <dependency>\r\n                <groupId>commons-io</groupId>\r\n                <artifactId>commons-io</artifactId>\r\n                <version>${commons-io.version}</version>\r\n            </dependency>\r\n\r\n            <!--httpclient-->\r\n            <dependency>\r\n                <groupId>org.apache.httpcomponents</groupId>\r\n                <artifactId>httpclient</artifactId>\r\n                <version>${httpclient.version}</version>\r\n            </dependency>\r\n\r\n            <dependency>\r\n                <groupId>com.google.code.gson</groupId>\r\n                <artifactId>gson</artifactId>\r\n                <version>${gson.version}</version>\r\n            </dependency>\r\n\r\n            <!-- JWT -->\r\n            <dependency>\r\n                <groupId>io.jsonwebtoken</groupId>\r\n                <artifactId>jjwt</artifactId>\r\n                <version>${jwt.version}</version>\r\n            </dependency>\r\n\r\n            <!--aliyun-->\r\n            <dependency>\r\n                <groupId>com.aliyun</groupId>\r\n                <artifactId>aliyun-java-sdk-core</artifactId>\r\n                <version>${aliyun-java-sdk-core.version}</version>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>com.aliyun.oss</groupId>\r\n                <artifactId>aliyun-sdk-oss</artifactId>\r\n                <version>${aliyun-sdk-oss.version}</version>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>com.aliyun</groupId>\r\n                <artifactId>aliyun-java-sdk-vod</artifactId>\r\n                <version>${aliyun-java-sdk-vod.version}</version>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>com.aliyun</groupId>\r\n                <artifactId>aliyun-java-vod-upload</artifactId>\r\n                <version>${aliyun-java-vod-upload.version}</version>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>com.aliyun</groupId>\r\n                <artifactId>aliyun-sdk-vod-upload</artifactId>\r\n                <version>${aliyun-sdk-vod-upload.version}</version>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>com.alibaba</groupId>\r\n                <artifactId>fastjson</artifactId>\r\n                <version>${fastjson.version}</version>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>org.json</groupId>\r\n                <artifactId>json</artifactId>\r\n                <version>${json.version}</version>\r\n            </dependency>\r\n\r\n            <dependency>\r\n                <groupId>commons-dbutils</groupId>\r\n                <artifactId>commons-dbutils</artifactId>\r\n                <version>${commons-dbutils.version}</version>\r\n            </dependency>\r\n\r\n            <dependency>\r\n                <groupId>com.alibaba.otter</groupId>\r\n                <artifactId>canal.client</artifactId>\r\n                <version>${canal.client.version}</version>\r\n            </dependency>\r\n        </dependencies>\r\n    </dependencyManagement>\r\n\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- msrhotel/pom.xml	(revision 4289b967d51076d0d4189c537d88e1cde0fb5b40)
+++ msrhotel/pom.xml	(date 1589794283660)
@@ -11,6 +11,7 @@
         <module>service-account</module>
         <module>service-customer</module>
         <module>service-order</module>
+        <module>service-customerinfo</module>
     </modules>
     <parent>
         <groupId>org.springframework.boot</groupId>
